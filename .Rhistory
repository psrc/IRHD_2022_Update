library(tidyverse)
library(readxl)
library(janitor)
library(tidyverse)
library(readxl)
library(janitor)
J_drive_raw_files_filepath <- "J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Raw Data/"
original_WSHFC_raw <- read_xlsx(paste0(N_drive_raw_files_filepath, "PSRC Report_WSHFC_12-2021.xlsx"))
original_WSHFC_raw <- read_xlsx(paste0(J_drive_raw_files_filepath, "PSRC Report_WSHFC_12-2021.xlsx"))
#filter for just King County properties
WSHFC_cleaned <- original_WSHFC_raw %>%
filter(County == "Snohomish" | County == "Pierce" | County == "Kitsap")
View(original_WSHFC_raw)
View(WSHFC_cleaned)
#group all 0 bedroom columns
WSHFC_cleaned <- WSHFC_cleaned %>%
mutate(Bedroom_0 = SRO + STUDIO) %>%
select(-SRO,
-STUDIO)
#create grouped funder column
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
mutate(Funder = paste(sort(unique(Funder)), collapse = ", "))
#filter for just King County properties
WSHFC_cleaned <- original_WSHFC_raw %>%
filter(County == "Snohomish" | County == "Pierce" | County == "Kitsap")
#group all 0 bedroom columns
WSHFC_cleaned <- WSHFC_cleaned %>%
mutate(Bedroom_0 = SRO + STUDIO) %>%
select(-SRO,
-STUDIO)
#create grouped funder column
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
mutate(Funder = paste(sort(unique(Funder)), collapse = ", "))
#select only the entry with the largest total restricted unit count, as there are often multiple entries with different unit counts
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
slice_max(`Income & Rent Restricted Units`,
n = 1,
with_ties = TRUE) %>%
distinct()
WSHFC_cleaned %>%
unique() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)
print(n = ...)
print(n = 180)
#select only entry with latest expiration date, as there are still some properties with multiple entries and different expiration dates
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
slice_max(`Project Expiration Date`,
n = 1,
with_ties = TRUE) %>%
distinct()
#select only entry with earliest in service date, as there are still some properties with multiple entries and different expiration dates
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
slice_min(`First Credit Year or C of O's`,
n = 1,
with_ties = TRUE) %>%
distinct()
#view cases where there are still multiple properties in the dataset
WSHFC_cleaned %>%
unique() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)
#check to see if any duplicates remaining - should be 0
WSHFC_cleaned %>%
distinct() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)
#check to see if any duplicates remaining - should be 0
WSHFC_cleaned_1 %>%
distinct() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)
#check to see if any duplicates remaining - should be 0
WSHFC_Dups <- WSHFC_cleaned %>%
distinct() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)
View(WSHFC_Dups)
